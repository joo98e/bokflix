{"version":3,"sources":["API/Movie.ts","API/base.ts","Functions/makeImagePath.ts","Component/Pages/Home/Home.tsx","Component/Pages/Search/Search.tsx","Component/Pages/TV/TV.tsx","Assets/UI/Logo.tsx","Assets/UI/Decorator/Header.tsx","App.tsx","Assets/Theme.ts","Assets/GlobalStyle.ts","index.tsx"],"names":["getMovies","a","fetch","then","res","json","makeImagePath","id","format","Wrapper","styled","div","Banner","props","backDropPhoto","Title","h2","theme","white","lighter","Overview","p","desc","Slider","Row","motion","Movie","black","modal","bgPhoto","MovieInfo","darker","Overlay","MoviePoster","MovieDetailOverview","MovieDetailTitle","MovieDetailDesc","MovieDetailDataTitle","span","title","MovieDetailDataContent","content","rowAnimateVars","hidden","x","window","outerWidth","transition","duration","visible","exit","boxAnimateVars","normal","scale","hover","y","type","delay","infoAnimateVars","opacity","Home","history","useHistory","bigMovieMatch","useRouteMatch","useQuery","isLoading","data","useState","currSlide","setCurrSlide","slideLeaving","setSlideLeaving","scrollY","useViewportScroll","clickedMovie","params","movieId","results","find","movie","console","log","toggleLeaving","prev","onClick","totalMovies","length","maxIndex","Math","floor","curr","backdrop_path","overview","AnimatePresence","initial","onExitComplete","variants","animate","slice","map","layoutId","whileHover","push","style","top","get","padding","display","gridTemplateColumns","gap","marginTop","release_date","vote_average","popularity","height","Search","TV","Logo","width","color","strokeColor","Svg","svg","focusable","viewBox","path","xmlns","fill","pathLength","default","stroke","strokeWidth","d","Nav","nav","Col","Items","ul","Item","li","Circle","red","Input","input","navVars","background","scroll","Header","searchOpen","setSearchOpen","homeMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollYProgress","useEffect","onChange","start","to","isExact","scaleX","fillRule","clipRule","placeholder","React","memo","App","exact","dark","veryDark","accent","GlobalStyle","createGlobalStyle","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.1e893e9b.chunk.js","sourcesContent":["import makeParams from '@fn/makeParam';\r\nimport { BASE_PATH, API_KEY } from './base';\r\n\r\nexport const getMovies = async () => {\r\n    // https://api.themoviedb.org/3/movie/438695/videos?api_key=7af162848d238272f0e7b0dae11c5b61&language=ko\r\n    // https://api.themoviedb.org/3/movie/297762?api_key=7af162848d238272f0e7b0dae11c5b61&append_to_response=videos\r\n    // https://www.youtube.com/watch?v=ywmOxCwBA4k\r\n    return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}&language=ko`)\r\n        .then(res => res.json());\r\n}\r\n\r\nexport interface IMovie{\r\n    adult: boolean;\r\n    backdrop_path: string;\r\n    genre_ids: number[];\r\n    id: number;\r\n    original_language: string;\r\n    original_title: string;\r\n    overview: string;\r\n    popularity: number;\r\n    poster_path: string;\r\n    release_date: string;\r\n    title: string;\r\n    video: boolean;\r\n    vote_average: number;\r\n    vote_count: number;\r\n}\r\n\r\nexport interface IGetMoviesResult{\r\n    dates : {\r\n        maximum : string;\r\n        minimum : string;\r\n    };\r\n    page : number;\r\n    results : IMovie[];\r\n    total_pages : number;\r\n    total_results : number;\r\n}","\r\nexport const BASE_PATH = \"https://api.themoviedb.org/3\";\r\nexport const IMAGE_PATH = \"https://image.tmdb.org/t/p\";\r\nexport const API_KEY = \"7af162848d238272f0e7b0dae11c5b61\";\r\n","import { IMAGE_PATH } from './../API/base';\r\n\r\nconst makeImagePath = (id: string | undefined, format?: string) => {\r\n    return `${IMAGE_PATH}/${format ?? \"original\"}/${id}`;\r\n}\r\n\r\nexport default makeImagePath","import { getMovies, IGetMoviesResult, IMovie } from '@api/Movie'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Loader from 'react-loader-spinner';\r\nimport { useQuery } from 'react-query'\r\nimport styled from 'styled-components';\r\nimport makeImagePath from '@fn/makeImagePath'\r\nimport { AnimatePresence, motion, useViewportScroll } from 'framer-motion';\r\nimport makeSplice from '@fn/makeSplice';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n\r\n`;\r\n\r\nconst Banner = styled.div<{ backDropPhoto: string | undefined }>`\r\n    display: flex;\r\n    height: 100vh;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    padding : 60px;\r\n    background: linear-gradient(rgba(0,0,0,0.2), rgba(0,0,0,1)), url(${props => props.backDropPhoto});\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    font-size: 72px;\r\n    margin-bottom: 20px;\r\n    color: ${props => props.theme.white.lighter};\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    width : 70%;\r\n    font-size: 18px;\r\n    line-height: 24px;\r\n    color: ${props => props.theme.white.desc};\r\n`;\r\n\r\nconst Slider = styled.div`\r\n    position: relative;\r\n    top: -200px;\r\n`;\r\n\r\nconst Row = styled(motion.div)`\r\n    position : absolute;\r\n    display: grid;\r\n    width: 100%;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    gap : 10px;\r\n    margin-bottom: 10px;\r\n    padding : 0 10px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst Movie = styled(motion.div) <{ bgPhoto: string }>`\r\n    height: 134px;\r\n    color: ${props => props.theme.black.lighter};\r\n    background-color: ${props => props.theme.black.modal};\r\n    background-image: url(${props => props.bgPhoto});\r\n    cursor: pointer;\r\n    &:first-child{\r\n        transform-origin: left;\r\n    }\r\n    &:last-child{\r\n        transform-origin: right;\r\n    }\r\n`;\r\n\r\n// const MovieImage = styled(motion.img)`\r\n//     width: 100%;\r\n// `;\r\n\r\nconst MovieInfo = styled(motion.div)`\r\n    position : absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    opacity: 0;\r\n    padding: 10px;\r\n    background-color: ${props => props.theme.black.modal};\r\n\r\n    h4{\r\n        font-size: 12px;\r\n        text-align: center;\r\n        color: ${props => props.theme.white.darker};\r\n    }\r\n`;\r\n\r\nconst Overlay = styled(motion.div)`\r\n    position: fixed;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    cursor: pointer;\r\n    opacity: 0;\r\n`;\r\n\r\nconst MoviePoster = styled(motion.div)`\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    width: 40vw;\r\n    min-height: 60vh;\r\n    margin: 0 auto;\r\n    border-radius: 15px;\r\n    background-color: ${props => props.theme.black.darker};\r\n`;\r\n\r\nconst MovieDetailOverview = styled.div<{ bgPhoto: string }>`\r\n    position: relative;\r\n    top: 0;\r\n    width: 100%;\r\n    min-height: 400px;\r\n    font-size: 36px;\r\n    padding: 15px;\r\n    border-radius: 15px 15px 0 0;\r\n    background-image: linear-gradient(to top, black, transparent), url(${props => props.bgPhoto});\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n`;\r\n\r\nconst MovieDetailTitle = styled.h2`\r\n    position: absolute;\r\n    bottom: 15px;\r\n    color: ${props => props.theme.white.darker};\r\n`;\r\nconst MovieDetailDesc = styled.p`\r\n    color: ${props => props.theme.white.desc};\r\n`;\r\n\r\nconst MovieDetailDataTitle = styled.span`\r\n    display : block;\r\n    color: ${props => props.theme.white.title};\r\n`;\r\n\r\nconst MovieDetailDataContent = styled.span`\r\n    display : block;\r\n    color : ${props => props.theme.white.content};\r\n`;\r\n\r\nconst rowAnimateVars = {\r\n    hidden: {\r\n        x: window.outerWidth - 5,\r\n        transition: {\r\n            duration: .5\r\n        }\r\n    },\r\n    visible: {\r\n        x: 0,\r\n        transition: {\r\n            duration: .5\r\n        }\r\n    },\r\n    exit: {\r\n        x: -window.outerWidth + 5,\r\n        transition: {\r\n            duration: .5\r\n        }\r\n    },\r\n}\r\n\r\nconst boxAnimateVars = {\r\n    normal: {\r\n        scale: 1\r\n    },\r\n    hover: {\r\n        scale: 1.3,\r\n        y: -50,\r\n        transition: {\r\n            type: \"tween\",\r\n            duration: 0.3,\r\n            delay: .5,\r\n        }\r\n    }\r\n}\r\n\r\nconst infoAnimateVars = {\r\n    hover: {\r\n        opacity: 1,\r\n        transition: {\r\n            type: \"tween\",\r\n            duration: 0.3,\r\n            delay: .5,\r\n        }\r\n    }\r\n}\r\n\r\nconst Home = (props: Props) => {\r\n    const offset = 6;\r\n    const history = useHistory();\r\n    const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\r\n    const { isLoading, data } = useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getMovies);\r\n    const [currSlide, setCurrSlide] = useState<number>(0);\r\n    const [slideLeaving, setSlideLeaving] = useState<boolean>(false);\r\n    const { scrollY } = useViewportScroll();\r\n    const clickedMovie = bigMovieMatch?.params.movieId && data?.results.find(movie => movie.id === +bigMovieMatch.params.movieId);\r\n    console.log(clickedMovie);\r\n    const IncreaseSlide = () => {\r\n        if (data) {\r\n            if (slideLeaving) return;\r\n            const totalMovies = data.results.length - 1;\r\n            const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n            toggleLeaving();\r\n            setCurrSlide(curr => curr === maxIndex ? 0 : curr + 1);\r\n        }\r\n    };\r\n\r\n    const toggleLeaving = () => setSlideLeaving(prev => !prev);\r\n\r\n    const handleClickOverlay = () => {\r\n        history.push(\"/\");\r\n    }\r\n\r\n    const handleClickMovieDetail = (id: number) => {\r\n        history.push(`/movies/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Wrapper>\r\n            {\r\n                isLoading ? <Loader type=\"CradleLoader\" /> :\r\n                    <>\r\n                        <Banner onClick={IncreaseSlide} backDropPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}>\r\n                            <Title>{data?.results[0].title}</Title>\r\n                            <Overview>{data?.results[0].overview}</Overview>\r\n                        </Banner>\r\n                        <Slider>\r\n                            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n                                {\r\n\r\n                                }\r\n                                <Row\r\n                                    key={currSlide}\r\n                                    variants={rowAnimateVars}\r\n                                    initial=\"hidden\"\r\n                                    animate=\"visible\"\r\n                                    exit=\"exit\"\r\n                                    transition={{\r\n                                        type: \"tween\",\r\n                                        duration: 1\r\n                                    }}\r\n                                >\r\n                                    {\r\n                                        data?.results\r\n                                            .slice(1)\r\n                                            .slice(offset * currSlide, (offset * currSlide) + offset).map((movie: IMovie) => {\r\n                                                return (\r\n                                                    <Movie\r\n                                                        key={movie.id}\r\n                                                        layoutId={movie.id + \"\"}\r\n                                                        variants={boxAnimateVars}\r\n                                                        initial=\"normal\"\r\n                                                        whileHover=\"hover\"\r\n                                                        transition={{ type: \"tween\" }}\r\n                                                        bgPhoto={makeImagePath(movie.backdrop_path, \"w300\")}\r\n                                                        onClick={() => handleClickMovieDetail(movie.id)}\r\n                                                    >\r\n                                                        <MovieInfo variants={infoAnimateVars}>\r\n                                                            <h4>{movie.title}</h4>\r\n                                                        </MovieInfo>\r\n                                                    </Movie>\r\n                                                )\r\n                                            })\r\n                                    }\r\n                                </Row>\r\n                            </AnimatePresence>\r\n                        </Slider>\r\n                        <AnimatePresence>\r\n                            {\r\n                                bigMovieMatch &&\r\n                                <>\r\n                                    <Overlay onClick={handleClickOverlay} animate={{ opacity: 1 }} exit={{ opacity: 0 }} />\r\n                                    <MoviePoster layoutId={bigMovieMatch.params.movieId} style={{ top: scrollY.get() + 100 }}>\r\n                                        {\r\n                                            clickedMovie &&\r\n                                            <>\r\n                                                <MovieDetailOverview bgPhoto={makeImagePath(clickedMovie.backdrop_path, \"w500\")}>\r\n                                                    <MovieDetailTitle>{clickedMovie.title}</MovieDetailTitle>\r\n                                                </MovieDetailOverview>\r\n                                                <div style={{ padding: \"15px\" }}>\r\n                                                    <MovieDetailDesc>{clickedMovie.overview ?? \"데이터가 없습니다.\"}</MovieDetailDesc>\r\n                                                    <div style={{ display: 'grid', gridTemplateColumns: \"repeat(2, 1fr)\", gap: 30, marginTop: 30 }}>\r\n                                                        <MovieDetailDataTitle>개봉일</MovieDetailDataTitle>\r\n                                                        <MovieDetailDataContent>{clickedMovie.release_date}</MovieDetailDataContent>\r\n                                                        <MovieDetailDataTitle>평점</MovieDetailDataTitle>\r\n                                                        <MovieDetailDataContent>{clickedMovie.vote_average}</MovieDetailDataContent>\r\n                                                        <MovieDetailDataTitle>관람수</MovieDetailDataTitle>\r\n                                                        <MovieDetailDataContent>{Math.floor(clickedMovie.popularity)}</MovieDetailDataContent>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </>\r\n                                        }\r\n                                    </MoviePoster>\r\n                                </>\r\n                            }\r\n                        </AnimatePresence>\r\n                    </>\r\n            }\r\n            <div style={{ height: \"100vh\" }}>\r\n\r\n            </div>\r\n        </Wrapper >\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst Search = (props: Props) => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nconst TV = (props: Props) => {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TV\r\n","import { motion } from 'framer-motion';\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\n\r\ninterface Props {\r\n    width: number;\r\n    height: number;\r\n    color?: string | \"transparent\";\r\n    strokeColor?: string;\r\n}\r\n\r\nconst Logo = ({ width, height, color, strokeColor }: Props) => {\r\n\r\n    const Svg = styled.svg`\r\n        width : ${props => props.width + \"px\" ?? \"100px\"};\r\n        height: ${props => props.height + \"px\" ?? \"100px\"};\r\n        color : ${props => props.color ?? \"white\"};\r\n    `;\r\n\r\n    return (\r\n        <Svg\r\n            focusable=\"false\" viewBox=\"0 0 400 512\"\r\n            width={width}\r\n            height={height}\r\n            color={color}\r\n        >\r\n            <motion.path\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                initial={{\r\n                    fill: \"rgba(255, 255, 255, 0)\",\r\n                    pathLength: 0\r\n                }}\r\n                animate={{\r\n                    fill: color ?? \"rgba(255, 255, 255, 1)\",\r\n                    pathLength: 1\r\n                }}\r\n                whileHover={{\r\n                    fill: \"rgba(255, 255, 255, 0)\",\r\n                    pathLength: 0\r\n                }}\r\n                transition={{\r\n                    default: { duration: 2 },\r\n                    fill: { duration: 1, delay: 1 },\r\n                }}\r\n\r\n                stroke={strokeColor ?? \"white\"} strokeWidth={30} fill=\"currentColor\" d=\"M446.6 222.7c-1.8-8-6.8-15.4-12.5-18.5-1.8-1-13-2.2-25-2.7-20.1-.9-22.3-1.3-28.7-5-10.1-5.9-12.8-12.3-12.9-29.5-.1-33-13.8-63.7-40.9-91.3-19.3-19.7-40.9-33-65.5-40.5-5.9-1.8-19.1-2.4-63.3-2.9-69.4-.8-84.8.6-108.4 10C45.9 59.5 14.7 96.1 3.3 142.9 1.2 151.7.7 165.8.2 246.8c-.6 101.5.1 116.4 6.4 136.5 15.6 49.6 59.9 86.3 104.4 94.3 14.8 2.7 197.3 3.3 216 .8 32.5-4.4 58-17.5 81.9-41.9 17.3-17.7 28.1-36.8 35.2-62.1 4.9-17.6 4.5-142.8 2.5-151.7zm-322.1-63.6c7.8-7.9 10-8.2 58.8-8.2 43.9 0 45.4.1 51.8 3.4 9.3 4.7 13.4 11.3 13.4 21.9 0 9.5-3.8 16.2-12.3 21.6-4.6 2.9-7.3 3.1-50.3 3.3-26.5.2-47.7-.4-50.8-1.2-16.6-4.7-22.8-28.5-10.6-40.8zm191.8 199.8l-14.9 2.4-77.5.9c-68.1.8-87.3-.4-90.9-2-7.1-3.1-13.8-11.7-14.9-19.4-1.1-7.3 2.6-17.3 8.2-22.4 7.1-6.4 10.2-6.6 97.3-6.7 89.6-.1 89.1-.1 97.6 7.8 12.1 11.3 9.5 31.2-4.9 39.4z\"></motion.path>\r\n        </Svg >\r\n    )\r\n}\r\n\r\nexport default Logo\r\n","import Logo from '@ui/Logo';\r\nimport { motion, useAnimation, useViewportScroll } from 'framer-motion';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport styled from 'styled-components'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst Nav = styled(motion.nav)`\r\n    position: fixed;\r\n    top: 0;\r\n    display : flex;\r\n    width: 100%;\r\n    height: 80px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    z-index: 999;\r\n    background: ${props => props.theme.black.darker};\r\n`;\r\n\r\nconst Col = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Items = styled.ul`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    min-width: 50px;\r\n    margin-right: 20px;\r\n    color : ${props => props.theme.white.darker};\r\n    transition: color 0.3 ease-in-out;\r\n    &:hover{\r\n        color : ${props => props.theme.white.lighter};\r\n    }\r\n`;\r\n\r\nconst Circle = styled(motion.span)`\r\n    position: absolute;\r\n    width: 5px;\r\n    height: 5px;\r\n    border-radius: 5px;\r\n    bottom: -15px;\r\n    left: 0;\r\n    right: 0;\r\n    margin: 0 auto;\r\n    background-color: ${props => props.theme.red};\r\n`;\r\n\r\nconst Search = styled.span`\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n    margin-right: 30px;\r\n    svg {\r\n    height: 25px;\r\n    }\r\n`;\r\n\r\nconst Input = styled(motion.input)`\r\n    position : absolute;\r\n    left: -150px;\r\n    transform-origin: right center;\r\n`;\r\n\r\nconst navVars = {\r\n    top: {\r\n        background: \"rgba(0, 0, 0, 0)\"\r\n    },\r\n    scroll: {\r\n        background: \"rgba(0, 0, 0, 0.9)\"\r\n    }\r\n}\r\n\r\nconst Header = (props: Props) => {\r\n    const [searchOpen, setSearchOpen] = useState(false)\r\n    const homeMatch = useRouteMatch(\"/\");\r\n    const tvMatch = useRouteMatch(\"/tv\");\r\n    const inputAnimation = useAnimation();\r\n    const navAnimation = useAnimation();\r\n    const { scrollY, scrollYProgress } = useViewportScroll();\r\n\r\n    const toggleSearch = () => {\r\n        if (searchOpen) {\r\n            inputAnimation.start({\r\n                scaleX: 0\r\n            });\r\n        } else {\r\n            inputAnimation.start({\r\n                scaleX: 1\r\n            });\r\n        }\r\n        setSearchOpen(prev => !prev);\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollY.onChange(() => {\r\n            if (scrollY.get() > 80) {\r\n                navAnimation.start(\"scroll\");\r\n            } else {\r\n                navAnimation.start(\"top\")\r\n            }\r\n        });\r\n    });\r\n\r\n    return (\r\n        <Nav variants={navVars} initial={\"top\"} animate={navAnimation}>\r\n            <Col>\r\n                <Logo width={128} height={48} color={\"#E51013\"} />\r\n                <Items>\r\n                    <Item>\r\n                        <Link to=\"/\">\r\n                            홈\r\n                            {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\r\n                        </Link>\r\n                    </Item>\r\n                    <Item>\r\n                        <Link to=\"/tv\">\r\n                            TV 쇼\r\n                            {tvMatch && <Circle layoutId=\"circle\" />}\r\n                        </Link>\r\n                    </Item>\r\n                </Items>\r\n            </Col>\r\n            <Col>\r\n                <Items>\r\n                    <Search>\r\n                        <motion.svg\r\n                            onClick={toggleSearch}\r\n                            animate={{ x: searchOpen ? -180 : 0 }}\r\n                            transition={{\r\n                                type: \"linear\"\r\n                            }}\r\n                            fill=\"currentColor\"\r\n                            viewBox=\"0 0 20 20\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                        >\r\n                            <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n                                clipRule=\"evenodd\"\r\n                            >\r\n                            </path>\r\n                        </motion.svg>\r\n                        <Input\r\n                            initial={{ scaleX: 0 }}\r\n                            animate={inputAnimation}\r\n                            transition={{\r\n                                type: \"linear\"\r\n                            }}\r\n                            placeholder=\"키워드로 검색해보세요.\"\r\n                        />\r\n                    </Search>\r\n                </Items>\r\n            </Col>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default React.memo(Header)\r\n","import Home from '@Pages/Home/Home'\r\nimport Search from '@Pages/Search/Search'\r\nimport TV from '@Pages/TV/TV'\r\nimport Header from '@ui/Decorator/Header'\r\nimport React from 'react'\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom'\r\n\r\ninterface Props {\r\n\r\n}\r\n\r\nconst App = (props: Props) => {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/tv\">\r\n          <TV />\r\n        </Route>\r\n        <Route exact path=\"/search\">\r\n          <Search />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n","import { DefaultTheme } from 'styled-components';\r\n\r\n// default\r\nconst dark: DefaultTheme = {\r\n    red: \"#E51013\",\r\n    black: {\r\n        veryDark: \"#141414\",\r\n        darker: \"#181818\",\r\n        lighter: \"#2F2F2F\",\r\n        modal : \"rgba(0, 0, 0, 0.5)\"\r\n    },\r\n    white: {\r\n        lighter: \"#fff\",\r\n        darker: \"#e5e5e5\",\r\n        desc : \"#cccccc\",\r\n        title : \"#9C9C9C\",\r\n        content: \"#AAAAAA\"\r\n    },\r\n    accent : {\r\n        lighter : \"#66ffcc\",\r\n        darker : \"\"\r\n    }\r\n}\r\n\r\nconst theme = {\r\n    dark: dark, // default\r\n}\r\n\r\nexport default theme;","\r\nimport { createGlobalStyle } from 'styled-components'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @font-face {\r\n    font-family: 'Pretendard-Regular';\r\n    src: url('https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff') format('woff');\r\n    font-weight: 400;\r\n    font-style: normal;\r\n  }\r\n  \r\n  *{\r\n    box-sizing : border-box;\r\n  }\r\n  html, body, div, span, applet, object, iframe,\r\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n  a, abbr, acronym, address, big, cite, code,\r\n  del, dfn, em, img, ins, kbd, q, s, samp,\r\n  small, strike, strong, sub, sup, tt, var,\r\n  b, u, i, center,\r\n  dl, dt, dd, ol, ul, li,\r\n  fieldset, form, label, legend,\r\n  table, caption, tbody, tfoot, thead, tr, th, td,\r\n  article, aside, canvas, details, embed, \r\n  figure, figcaption, footer, header, hgroup, \r\n  menu, nav, output, ruby, section, summary,\r\n  time, mark, audio, video {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    font-size: 100%;\r\n    font-family: 'Pretendard-Regular';\r\n    vertical-align: baseline;\r\n  }\r\n  footer, header, hgroup, menu, nav, section {\r\n    display: block;\r\n  }\r\n  body {\r\n    font-family: 'Nanum Gothic', sans-serif;\r\n    line-height: 1;\r\n    color : #FFF;\r\n    background-color : #000;\r\n  }\r\n  ol, ul {\r\n    list-style: none;\r\n  }\r\n  blockquote, q {\r\n    quotes: none;\r\n  }\r\n  blockquote:before, blockquote:after,\r\n  q:before, q:after {\r\n    content: '';\r\n    content: none;\r\n  }\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n  a{\r\n    text-decoration : none;\r\n    color : inherit;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { ReactQueryDevtools } from 'react-query/devtools'\r\nimport { RecoilRoot } from 'recoil';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport theme from './Assets/Theme';\r\nimport GlobalStyle from './Assets/GlobalStyle';\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <ThemeProvider theme={theme.dark}>\r\n        <QueryClientProvider client={queryClient}>\r\n          <GlobalStyle />\r\n          <App />\r\n          {/* <ReactQueryDevtools /> */}\r\n        </QueryClientProvider>\r\n      </ThemeProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}